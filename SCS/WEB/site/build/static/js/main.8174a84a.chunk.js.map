{"version":3,"sources":["MYnavBar.js","Test/Switch.js","Test/Sensori_Temperatura.js","Test/Termostati.js","Test/Serrande_Tapparelle.js","Test/Dimmer.js","Test/Gruppi.js","Test/Serrature.js","Test/Campanello_porta.js","Test/Dispositivi.js","Test/Test.js","Configurazione/Sensore1.js","Configurazione/ConfigurazioneDispositivi.js","Configurazione/AggiungiAttuatore.js","Configurazione/Configurazione.js","HomePage/Homepage.js","NodeRedAlexa/NodeRedAlexa.js","NodeRedAlexa/noderedHome.js","NodeRedAlexa/NodeRedAWSDispositivi.js","NodeRedAlexa/noderedAlexaAWS.js","App.js","reportWebVitals.js","index.js"],"names":["MYnavBar","Container","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ON_OFF","device","valuedataRT","clientMWTT","useState","statoONOFF","setstatoONOFF","useEffect","nome_attuatore","stato","localeCompare","style","paddingTop","Card","width","border","Header","Row","Col","textAlign","fontSize","marginRight","indirizzo_Ambiente","indirizzo_PL","Body","fluid","lg","data-icon","src","alignSelf","alignItems","type","onClick","connected","topic","publish","Footer","margin","padding","Sensori_Temperatura","statosensore","setstatosensore","Button","size","variant","Termostati","temp_termostato","settemp_termostato","modalita_termostato","setmodalita_termostato","m","split","name","step","value","onChange","event","target","onBlur","Serrande_Tapparelle","percentualeTapparelle","set_percentualeTapparelle","sm","tooltip","min","max","onAfterChange","Dimmer","statodimmerONOFF","setstatodimmerONOFF","statodimmerPercent","setstatodimmerPercent","percentualeDimmer","set_percentualeDimmer","Grupppi","Serrature","Campanello_porta","Dispositivi","mqttdata","tipo_attuatore","Gruppi","websocketUrl","window","location","host","option_conn","username","password","Test","lista_dispositivi","setListaDispositivi","MqttClient","setMqttClient","MQTT_data","setMQTT_data","setDebugSCSbus","client","console","log","a","fetch","ADDRESS_SERVER","then","res","json","data","fetchData","unsubscribe","end","close","mqtt","connect","stream","on","err","subscribe","payload","packet","TextDecoder","decode","DebugSCSbus","dd","toLowerCase","map","i","marginBottom","Sensore1","handle_CHANHE_NOME","handle_CHANHE_A","handle_CHANHE_PL","handle_TIPO","handle_TIMER_UP","handle_TIMER_DOWN","handle_ELIMINA","optionsStateTipoAttuatori","setoptionsStateTipoAttuatori","optionsStateTipoAttuatoriTIMER","setoptionsStateTipoAttuatoriTIMER","nomeATTUATORE","setinomeATTUATORE","indirizzo_A","setindirizzo_A","setindirizzo_PL","TIMER_UP","setTIMER_UP","TIMER_DOWN","setTIMER_DOWN","timer_salita","timer_discesa","handlChangeAMBIENTEind","handlChangePUNTOLUCEind","handlChangeTIMER_UP","handlChangeTIMER_DOWN","nuovonome","ConfigurazioneDispositivi","AggiungiAttuatore","handel_AGIUNGInew","placeholder","Configurazioni","show","setShow","handleClose","handleShow","messaggio_da_visualizzare","setmessaggio_da_visualizzare","post_request_update_database","address","datas","JSON","stringify","method","headers","body","response","find","myArray","filter","Modal","onHide","backdrop","keyboard","closeButton","Title","Homepage","history","useHistory","push","class","NoderedAlexa","setstato_esporta","stato_startNode","setstato_startNode","link_nodered","setlink_nodered","flow_anuale","setflow_anuale","textAreaRef","useRef","stato_startmanuale","setstato_startmanuale","secondu","setsecondu","setover","timerID","settimerID","second","clearTimeout","handle_startNodered","t","setInterval","handle_CopyClipboard","e","current","select","document","execCommand","focus","color","add","marginTop","text","Form","Control","as","rows","readonly","ref","add2","listStyleType","handle_codeflow_manuale_incolla","NoderedHome","NodeRedAWSDispositivi","name_EndPoint","setname_EndPoint","nome_endpoint","NoderedAlexaAWS","add_EndPoint","setadd_EndPoint","FILE_private_key","setFILE_private_key","FILE_cert_pem","setFILE_cert_pem","FILE_root_CA","setFILE_root_CA","fetchDataDispositivi","EndPoint","PRIVATE_KEY","CERT_PEM","CRT","selectedFile","setSelectedFile","changeHandler","files","handleSubmission","tipo","formData","FormData","append","result","catch","error","accept","paddingBottom","App","exact","path","component","Configurazione","noderedHome","noderedAlexa","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8174a84a.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./App.css\"\n\n\n\nfunction MYnavBar() {\n    return (\n        <>\n            <Container>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"\">SCSshield</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/\">Home</Nav.Link>\n                            <Nav.Link href=\"configurazione.html\">Configurazioni</Nav.Link>\n                            <Nav.Link href=\"test.html\">Test</Nav.Link>\n                            <Nav.Link href=\"noderedHome.html\">Node-Red</Nav.Link>                           \n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </Container>\n        </>\n    );\n}\n\n\nexport default MYnavBar;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\nfunction ON_OFF({ device, valuedataRT, clientMWTT }) {\n    //Stato\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\n                setstatoONOFF(\"lamp_accesa.svg\");\n            } else {\n                setstatoONOFF(\"lamp_spenta.svg\");\n            }\n        }\n    }, [valuedataRT]);\n\n\n\n\n\n    const on_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"on\")\n            }\n        }\n    };\n    const t_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"t\")\n            }\n        }\n    };\n    const off_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"off\")\n            }\n        }\n    };\n\n\n    return (\n        <>\n\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid >\n                            <Row>\n                                <Col lg={8} >\n                                    <Row>\n                                        <Col lg={8}><i>Stato</i></Col>\n                                        <Col lg={8}>\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>ON/OFF</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\n\nexport default ON_OFF;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\nfunction Sensori_Temperatura({ device, valuedataRT, clientMWTT }) {\n    //Stato\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            setstatosensore(valuedataRT.stato + \"°\");\n        }\n    }, [valuedataRT]);\n\n\n\n    const aggiorna_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic =  \"/scsshield/device/\" + device.nome_attuatore + \"/request\";\n                clientMWTT.publish(topic, \" \")\n            }\n        }\n    };\n\n    return (\n        <>\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row >\n                                <Col lg={8} style={{ alignSelf: \"center\" }}>\n                                    <Row >\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\n                                        <Col lg={8}><b>{statosensore}</b></Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={aggiorna_button} >Aggiorna</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SENSORE-TEMPERATURA</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\nexport default Sensori_Temperatura;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\nfunction Termostati({ device, valuedataRT, clientMWTT }) {\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\n    const [temp_termostato, settemp_termostato] = useState(\"--.-°\");\n    const [modalita_termostato, setmodalita_termostato] = useState(\"----\");\n //   const [temp_setting_termostato, set_temp_setting_termostato] = useState(10);\n\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n\n            var m = (valuedataRT.topic).split(\"/\");\n            if (m[4] != null) {\n                if (m[4].localeCompare(\"status\") == 0) {\n                    setstatosensore(valuedataRT.stato + \"°\");\n                } else if (m[4].localeCompare(\"temperatura_termostato_impostata\") == 0) {\n                    settemp_termostato(valuedataRT.stato);\n                   // set_temp_setting_termostato(valuedataRT.stato);\n                } else if (m[4].localeCompare(\"modalita_termostato_impostata\") == 0) {\n                    setmodalita_termostato(valuedataRT.stato);\n                }\n            }\n        }\n    }, [valuedataRT]);\n\n\n    const settemp_setting_termostato = (event) => {\n        settemp_termostato(event.target.value);\n    };\n\n    const send_settemp_setting_termostato = (event) => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_temp_termostato\";\n                clientMWTT.publish(topic, event.target.value)\n            }\n        }\n    };\n    \n\n    const estate_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\n                clientMWTT.publish(topic, 'estate')\n            }\n        }\n    };\n    const off_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\n                clientMWTT.publish(topic, 'off')\n            }\n        }\n    };\n    const inverno_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\n                clientMWTT.publish(topic, 'inverno')\n            }\n        }\n    };\n\n\n\n\n\n    return (\n        <>\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row >\n                                <Col lg={2}>\n                                    <Row >\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\n                                        <Col lg={8}><b>{statosensore}</b></Col>\n                                    </Row>\n                                </Col>\n                                <Col lg={2}>\n                                    <Row>\n                                        <Col lg={8}><i>Temp-Termostato</i></Col>\n                                        <Col lg={8}><b>{temp_termostato}</b></Col>\n                                    </Row>\n                                </Col>\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\n                                    <Row >\n                                        <Col lg={8}><i>Modalita</i></Col>\n                                        <Col lg={8}><b>{modalita_termostato}</b></Col>\n                                    </Row>\n                                </Col>\n                                <Col lg={2}>\n                                    <Row >\n                                        <Col lg={6}><i>Set Temp</i></Col>\n                                        <Col lg={8}>\n                                            <div className=\"col-xs-1\">\n                                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" step=\"0.5\" value={temp_termostato} onChange={settemp_setting_termostato} onBlur={send_settemp_setting_termostato} />\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={estate_button}>CALDO</Button>\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={off_button}>OFF</Button>\n                                        <Button size=\"md\" variant=\"outline-primary\" onClick={inverno_button}>FREDDO</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>TERMOSTATO</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n        </>\n    );\n}\n\n\nexport default Termostati;","import { useState, useEffect } from 'react';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\nfunction Serrande_Tapparelle({ device, valuedataRT, clientMWTT }) {\n\n    const [percentualeTapparelle, set_percentualeTapparelle] = useState(50);\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            set_percentualeTapparelle(valuedataRT.stato);\n        }\n    }, [valuedataRT]);\n\n\n    const update_percentuale = (event) => {\n        set_percentualeTapparelle(event.target.value);\n    };\n    const update_mqtt_serrande = (event) => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/percentuale\";\n                clientMWTT.publish(topic, percentualeTapparelle);\n            }\n        }\n    };\n\n\n\n\n\n    return (\n        <>\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row>\n                                <Col sm={12}>\n                                    <Row >\n                                        <Col><i>Stato %</i></Col>\n                                        <Col lg={6}>\n                                            <RangeSlider tooltip='on' value={percentualeTapparelle} min=\"0\" max=\"100\" step=\"1\"  onChange={update_percentuale} onAfterChange={update_mqtt_serrande} />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRANDE/TAPPARELLE</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n        </>\n    );\n}\n\n\nexport default Serrande_Tapparelle;","import { useState, useEffect } from 'react';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\nfunction Dimmer({ device, valuedataRT, clientMWTT }) {\n\n    //Stato\n    const [statodimmerONOFF, setstatodimmerONOFF] = useState(\"lamp_disabilitata.svg\");\n    const [statodimmerPercent, setstatodimmerPercent] = useState(\"--%\");\n\n    //Comando\n    const [percentualeDimmer, set_percentualeDimmer] = useState(50);\n\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            var m = (valuedataRT.topic).split(\"/\");\n            if (m[5] != null) {\n                setstatodimmerPercent(valuedataRT.stato + \"%\");\n                set_percentualeDimmer(valuedataRT.stato);\n            } else {\n                if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\n                    setstatodimmerONOFF(\"lamp_accesa.svg\");\n                } else {\n                    setstatodimmerONOFF(\"lamp_spenta.svg\");\n                }\n            }\n        }\n    }, [valuedataRT]);\n\n\n\n    const update_percentuale = (event) => {\n        setstatodimmerPercent(valuedataRT.stato + \"%\");\n        set_percentualeDimmer(event.target.value);\n    };\n    const update_mqtt_dimmer = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\n                clientMWTT.publish(topic, \"on\");\n\n                topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\n                clientMWTT.publish(topic, percentualeDimmer);\n            }\n        }\n    };\n\n\n    const on_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\n                clientMWTT.publish(topic, \"on\")\n            }\n        }\n    };\n    const t_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\n                clientMWTT.publish(topic, \"t\")\n            }\n        }\n    };\n    const off_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\n                clientMWTT.publish(topic, \"off\")\n            }\n        }\n    };\n\n\n\n    return (\n        <>\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid >\n                            <Row>\n                                <Col lg={4} >\n                                    <Row>\n                                        <Col lg={8}><i>Stato Percentuale\t</i></Col>\n                                        <Col lg={8}><b>{statodimmerPercent}</b></Col>\n                                    </Row>\n                                </Col>\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\n                                    <Row>\n                                        <Col lg={8}><i>Stato</i></Col>\n                                        <Col lg={8}>\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statodimmerONOFF} style={{ width: \"32px\" }} />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col lg={3}>\n                                    <Row >\n                                        <Col lg={6}><i>Set Dimmer</i></Col>\n                                        <Col lg={8}>\n                                            <div className=\"col-xs-1\">\n                                                <RangeSlider tooltip='off' value={percentualeDimmer} min=\"10\" max=\"100\" step=\"10\" onChange={update_percentuale} onAfterChange={update_mqtt_dimmer} />\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>Dimmer</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n        </>\n    );\n}\n\n\nexport default Dimmer;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\nfunction Grupppi({ device, valuedataRT, clientMWTT }) {\n    //Stato\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\n                setstatoONOFF(\"lamp_accesa.svg\");\n            } else {\n                setstatoONOFF(\"lamp_spenta.svg\");\n            }\n        }\n    }, [valuedataRT]);\n\n\n\n\n\n    const on_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"on\")\n            }\n        }\n    };\n    const t_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"t\")\n            }\n        }\n    };\n    const off_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\n                clientMWTT.publish(topic, \"off\")\n            }\n        }\n    };\n\n\n    return (\n        <>\n\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Ambiente: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                        Punto Luce: {device.indirizzo_PL}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid >\n                            <Row>\n                                <Col lg={8} >\n                                    <Row>\n                                        <Col lg={8}><i>Stato</i></Col>\n                                        <Col lg={8}>\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>GRUPPI</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\n\nexport default Grupppi;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\nfunction Serrature({ device, valuedataRT, clientMWTT }) {\n\n    const sblocca_button = () => {\n        if (clientMWTT) {\n            if (clientMWTT.connected) {\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/sblocca\";\n                clientMWTT.publish(topic, \"sblocca\")\n            }\n        }\n    };\n\n\n    return (\n        <>\n           <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                    Posto Esterno: {device.indirizzo_Ambiente}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid >\n                            <Row>\n                                <Col lg={8} >\n                                    <Row>\n                                        <Col lg={8}><i></i></Col>\n                                        <Col lg={8}>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={sblocca_button}>SBLOCCA</button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRATURE</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\n\nexport default Serrature;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\nfunction Campanello_porta({ device, valuedataRT, clientMWTT }) {\n    //Stato\n    const [statoONOFF, setstatoONOFF] = useState(\"bell_off.jpg\");\n\n    useEffect(() => {\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\n                setstatoONOFF(\"bell_on.jpg\");\n            } else {\n                setstatoONOFF(\"bell_off.jpg\");\n            }\n        }\n    }, [valuedataRT]);\n\n\n    return (\n        <>\n           <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <h5>{device.nome_attuatore}</h5>\n                            </Col>\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                    Citofono interno: {device.indirizzo_PL}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid >\n                                    <Row>\n                                        <Col lg={12}><i>Stato</i></Col>\n                                        <Col lg={12}>\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\n                                        </Col>\n                                    </Row>\n                        </Container>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>CAMPANELLO</p>\n                    </Card.Footer>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\n\nexport default Campanello_porta;","import React from \"react\";\nimport ON_OFF from \"./Switch\"\nimport Sensori_Temperatura from \"./Sensori_Temperatura\"\nimport Termostati from \"./Termostati\"\nimport Serrande_Tapparelle from \"./Serrande_Tapparelle\"\nimport Dimmer from \"./Dimmer\"\nimport Gruppi from \"./Gruppi\"\nimport Serrature from \"./Serrature\"\nimport Campanello_porta from \"./Campanello_porta\"\n\n\nimport \"./../App.css\";\n\n\n\n\n\n\nfunction Dispositivi({ device, mqttdata, clientMWTT }) {\n\n    if (device.tipo_attuatore === \"on_off\") {\n        return (\n            <>\n                <ON_OFF device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\n            </>\n        );\n    } else if (device.tipo_attuatore === \"sensori_temperatura\") {\n        return (\n            <>\n                <Sensori_Temperatura device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\n            </>\n        );\n    } else if (device.tipo_attuatore === \"termostati\") {\n        return (\n            <>\n                <Termostati device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }else if (device.tipo_attuatore === \"serrande_tapparelle\") {\n        return (\n            <>\n                <Serrande_Tapparelle device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }else if (device.tipo_attuatore === \"dimmer\") {\n        return (\n            <>\n                <Dimmer device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }else if (device.tipo_attuatore === \"gruppi\") {\n        return (\n            <>\n                <Gruppi device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }else if (device.tipo_attuatore === \"serrature\") {\n        return (\n            <>\n                <Serrature device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }else if (device.tipo_attuatore === \"campanello_porta\") {\n        return (\n            <>\n                <Campanello_porta device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\n            </>\n        );\n    }\n\n    \n    \n\n    return (\n        <>\n        </>\n    );\n\n}\n\n\nexport default Dispositivi;\n\n\n\n\n\n\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport Dispositivi from './Dispositivi';\n\nimport mqtt from \"mqtt\";\nimport \"./../App.css\";\n\n\n//https://levelup.gitconnected.com/mqtt-over-websocket-in-a-react-app-35ce96cd0844\n\n\n\n//const websocketUrl = \"ws://192.168.1.16:9001\";\nvar loc = window.location, new_uri;\nconst websocketUrl = \"ws://\" + loc.host + \":1884\";\n\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\nconst ADDRESS_SERVER = \"/\";\n\nconst option_conn = {\n        username: 'scs',\n        password: 'scs'\n    }\n\n\nfunction Test() {\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\n    const [MqttClient, setMqttClient] = useState([]);\n\n    const [MQTT_data, setMQTT_data] = useState(\"\");\n\n    const [DebugSCSbus, setDebugSCSbus] = useState(\"\");\n\n    useEffect(() => {\n        var client = null;\n\n        setListaDispositivi([]);\n        console.log(\"**** FETCH DATA ****\");\n\n        const fetchData = async () => {\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\n                .then(res => res.json())\n                .then((data) => {\n                    setListaDispositivi(data);\n                });\n        };\n\n\n        const mqttconnect = () => {\n            if (client == null) {\n\n            } else {\n                console.log(\"CLOSEEEE era aperto\");\n                client.unsubscribe(\"/scsshield/device/+/status\");\n                client.unsubscribe(\"/scsshield/device/+/status/percentuale\");\n                client.unsubscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\n                client.unsubscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\n               // client.unsubscribe(\"/scsshield/debug/bus\");\n                client.end();\n                client.close();\n            }\n            client = mqtt.connect(websocketUrl, option_conn);\n            client.stream.on(\"error\", (err) => {\n                console.log(\"MQTT errorrrrrrrrr\");\n                console.log(\"MQTT errorrrrrrrrr\");\n                console.log(\"MQTT errorrrrrrrrr\");\n                console.log(\"MQTT errorrrrrrrrr\");\n                client.end();\n              });\n\n            setMqttClient(client);\n\n            client.on('connect', function () {\n                console.log(\"MQTT Connesso....ok!\");\n                client.subscribe(\"/scsshield/device/+/status\");\n                client.subscribe(\"/scsshield/device/+/status/percentuale\");\n                client.subscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\n                client.subscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\n             //   client.subscribe(\"/scsshield/debug/bus\");\n\n            });\n            client.on('error', function () {\n                console.log(\"MQTT ERROR!\");\n                client.end();\n            });\n            client.on('message', function (topic, payload, packet) {\n                const data = new TextDecoder(\"utf-8\").decode(payload);\n\n                if (topic.localeCompare(\"/scsshield/debug/bus\") == 0) {\n                    setDebugSCSbus(DebugSCSbus => [...DebugSCSbus, data + '\\n']);\n                } else {\n\n                    var m = (topic).split(\"/\");\n                    var nomeDevice = m[3];\n\n                    var mesg = (data).toLowerCase();\n\n                    const dd = { \"nome_attuatore\": nomeDevice, \"stato\": mesg, \"topic\": topic };\n\n                    setMQTT_data(dd);\n\n                    console.log(dd.nome_attuatore);\n                    console.log(dd.stato);\n                }\n\n            });\n        };\n\n        fetchData();\n        mqttconnect();\n\n        return () => {\n            console.log(\"CLOSEEE\");\n            setListaDispositivi([]);\n\n            client.unsubscribe(\"/scsshield/device/+/status\");\n            client.unsubscribe(\"/scsshield/device/+/status/percentuale\");\n            client.unsubscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\n            client.unsubscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\n            client.end();\n            //MqttClient.close();\n            // cleaning up the listeners here\n        }\n    }, []);\n\n\n\n\n\n\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                {lista_dispositivi.map((device, i) => (\n                    <div key={i} style={{marginBottom:\"50px\"}} >\n                        <Dispositivi device={device} mqttdata={MQTT_data} clientMWTT={MqttClient} />\n                    </div>\n                ))}\n            </div>\n            {\n            /*<div className=\"DebugSCSbus\" style={{ textAlign: \"center\" }}>\n                <textarea style={{ width: \"80%\" }} value={DebugSCSbus} rows={12} cols={50} name=\"Debug Bus\" placeholder='' />\n            </div>\n            */\n            }\n        </>\n    );\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\nexport default Test;","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\n\n\nfunction Sensore1({ device, handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\n\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\n    const [indirizzo_A, setindirizzo_A] = useState(0);\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\n\n\n    useEffect(() => {\n        setoptionsStateTipoAttuatori(device.tipo_attuatore);\n        setindirizzo_A(device.indirizzo_Ambiente);\n        setindirizzo_PL(device.indirizzo_PL);\n        if ('timer_salita' in device)\n        {\n            setTIMER_UP(device.timer_salita);\n        }\n        if ('timer_discesa' in device)\n        {\n            setTIMER_DOWN(device.timer_discesa);\n        }\n\n        setinomeATTUATORE(device.nome_attuatore);\n\n        if(device.tipo_attuatore === \"serrande_tapparelle\"){\n            setoptionsStateTipoAttuatoriTIMER(true);\n        }else{\n            setoptionsStateTipoAttuatoriTIMER(false);\n        }\n    }, []);\n\n\n    //Option change , tipo attuatore\n    const handleoptionsStateTipoAttuatori = (event) =>{\n        setoptionsStateTipoAttuatori (event.target.value);\n        if(event.target.value === \"serrande_tapparelle\"){\n            setoptionsStateTipoAttuatoriTIMER(true);\n        }else{\n            setoptionsStateTipoAttuatoriTIMER(false);\n        }\n        handle_TIPO({nome_attuatore: device.nome_attuatore , tipo_attuatore : event.target.value});\n    }\n    //change , Indirizzo Ambiente\n    const handlChangeAMBIENTEind = (event) =>{\n        setindirizzo_A(event.target.value);\n        handle_CHANHE_A({nome_attuatore: device.nome_attuatore , indirizzo_Ambiente : event.target.value});\n    }\n    //change , Indirizzo Puno Luce\n    const handlChangePUNTOLUCEind = (event) =>{\n        setindirizzo_PL(event.target.value);\n        handle_CHANHE_PL({nome_attuatore: device.nome_attuatore , indirizzo_PL : event.target.value});\n    }\n    //change , Timer Salita [se esiste]\n    const handlChangeTIMER_UP = (event) =>{\n        setTIMER_UP(event.target.value);\n        handle_TIMER_UP({nome_attuatore: device.nome_attuatore , timer_salita : event.target.value});\n    }\n    //change , Timer Discesa [se esiste]\n    const handlChangeTIMER_DOWN = (event) =>{\n        setTIMER_DOWN(event.target.value);\n        handle_TIMER_DOWN({nome_attuatore: device.nome_attuatore , timer_discesa : event.target.value});\n    }\n    //change , NOME ATTUATORE [se esiste]\n    const handleChangeNOME_ATTUTATORE = (event) =>{\n        setinomeATTUATORE(event.target.value);\n    }\n\n    const handleChangeNOME_ATTUTATOREupdateDATABASE = (event) =>{\n        console.log(\"QUI CAMBIO IL NOME ATTUATORRE\");\n        handle_CHANHE_NOME({nome_attuatore: device.nome_attuatore , nuovonome : nomeATTUATORE});\n    }\n\n\n    //ELIMINA BUTTON\n    const handleELIMINA = () =>{\n        console.log(\"handleELIMINA\");\n        handle_ELIMINA({nome_attuatore: device.nome_attuatore});\n    }\n\n\n\n\n\n\n    const timer_salitadiscesa = () => {\n        return (\n            <>\n                <Col lg={3}>\n                    <Col >\n                        <Row >\n                            <Col ><i>Timer Salita [mS]</i></Col>\n                            <Col lg={12}>\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col >\n                        <Row >\n                            <Col ><i>Timer Discesa [mS]</i></Col>\n                            <Col lg={12}>\n                                <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Col>\n            </>\n        );\n    };\n\n\n\n    const Address_Campanello = () => {\n        //label = Citofono interno\n\n        return(\n            <>\n\n\n\n            </>\n        );\n\n    };\n\n\n    const Address_Select = () => {\n\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Citofono interno</i></Col>\n                            <Col lg={8}>\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i></i></Col>\n                            <Col lg={8}>\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Posto Esterno</i></Col>\n                            <Col lg={8}>\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i></i></Col>\n                            <Col lg={8}>\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }else{\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Ambiente</i></Col>\n                            <Col lg={8}>\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i>Puno Luce</i></Col>\n                            <Col lg={8}>\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }\n    };\n\n\n\n\n\n\n    return (\n        <>\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        <Row>\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} />\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row >\n                                {Address_Select()}\n\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\n                                    <Row >\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\n                                        <Col lg={8}>\n                                            <select id=\"cars\" name=\"cars\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}>>\n                                                <option value=\"on_off\">ON/OFF</option>\n                                                <option value=\"dimmer\">Dimmer</option>\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\n                                                <option value=\"gruppi\">Gruppi</option>\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\n                                                <option value=\"termostati\">Termostati</option>\n                                                <option value=\"serrature\">Serrature</option>\n                                                <option value=\"campanello_porta\">Campanello porta</option>\n                                            </select>\n                                        </Col>\n                                    </Row>\n                                </Col>\n\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\n\n\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-danger\" onClick={handleELIMINA} >ELIMINA</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </>\n    );\n\n}\n\n\n\nexport default Sensore1;\n\n\n","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\nimport Sensore1 from \"./Sensore1\"\n\nimport \"./../App.css\";\n\n\n\n\n\nfunction ConfigurazioneDispositivi({ device , handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\n\n    return (\n        <>\n            <Sensore1 device={device} handle_CHANHE_NOME={handle_CHANHE_NOME} handle_CHANHE_A={handle_CHANHE_A} \n                   handle_CHANHE_PL={handle_CHANHE_PL} handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\n                   handle_ELIMINA={handle_ELIMINA} />\n        </>\n    );\n\n}\n\n\n\nexport default ConfigurazioneDispositivi;\n\n\n","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n\n\n\nfunction AggiungiAttuatore({handel_AGIUNGInew} ) {\n    var timersalitadiscesa = false;\n\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\n    const [indirizzo_A, setindirizzo_A] = useState(0);\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\n\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\n\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\n\n\n    //change , NOME ATTUATORE [se esiste]\n    const handleChangeNOME_ATTUTATORE = (event) =>{\n        setinomeATTUATORE(event.target.value);\n    }\n    const handleChangeNOME_ATTUTATOREupdateDATABASE = (event) =>{\n        //Qui ho il nome Attuatore Completo\n    }\n\n     //change , Indirizzo Ambiente\n     const handlChangeAMBIENTEind = (event) =>{\n        setindirizzo_A(event.target.value);\n    }\n    //change , Indirizzo Puno Luce\n    const handlChangePUNTOLUCEind = (event) =>{\n        setindirizzo_PL(event.target.value);\n    }\n\n    //Option change , tipo attuatore\n    const handleoptionsStateTipoAttuatori = (event) =>{\n\n        setoptionsStateTipoAttuatori (event.target.value);\n        if(event.target.value === \"serrande_tapparelle\"){\n            setoptionsStateTipoAttuatoriTIMER(true);\n        }else{\n            setoptionsStateTipoAttuatoriTIMER(false);\n        }\n    }\n    //change , Timer Salita [se esiste]\n    const handlChangeTIMER_UP = (event) =>{\n        setTIMER_UP(event.target.value);\n    }\n    //change , Timer Discesa [se esiste]\n    const handlChangeTIMER_DOWN = (event) =>{\n        setTIMER_DOWN(event.target.value);\n    }\n\n    //CLICK AGGIUNGI\n    const handlClickAGGIUNGI = (event) =>{\n        if(optionsStateTipoAttuatori === \"serrande_tapparelle\"){\n            handel_AGIUNGInew({nome_attuatore: nomeATTUATORE, indirizzo_Ambiente : indirizzo_A,\n                indirizzo_PL : indirizzo_PL, tipo_attuatore : optionsStateTipoAttuatori, \n                timer_salita : TIMER_UP, timer_discesa: TIMER_DOWN });\n        }else{\n            handel_AGIUNGInew({nome_attuatore: nomeATTUATORE, indirizzo_Ambiente : indirizzo_A,\n                indirizzo_PL : indirizzo_PL, tipo_attuatore : optionsStateTipoAttuatori});\n        }\n        setinomeATTUATORE(\"\");\n    }\n\n\n\n    const timer_salitadiscesa = () => {\n        return (\n            <>\n                <Col lg={3}>\n                    <Col >\n                        <Row >\n                        <Col ><i>Timer Salita [mS]</i></Col>\n                            <Col lg={12}>\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col >\n                        <Row >\n                        <Col ><i>Timer Discesa [mS]</i></Col>\n                            <Col lg={12}>\n                            <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Col>\n            </>\n        );\n    };\n\n\n    const Address_Select = () => {\n\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Citofono interno</i></Col>\n                            <Col lg={8}>\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i></i></Col>\n                            <Col lg={8}>\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Posto Esterno</i></Col>\n                            <Col lg={8}>\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i></i></Col>\n                            <Col lg={8}>\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }else{\n            return(\n                <>\n                    <Col lg={2}>\n                        <Row >\n                            <Col lg={8}><i>Ambiente</i></Col>\n                            <Col lg={8}>\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={2}>\n                        <Row>\n                            <Col lg={8}><i>Puno Luce</i></Col>\n                            <Col lg={8}>\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\n                            </Col>\n                        </Row>\n                    </Col>\n    \n                </>\n            );\n        }\n    };\n\n\n\n\n\n    return (\n        <>\n            <Container style={{ paddingTop: \"2rem\" }}>\n            <hr></hr>\n\n            <div>\n                <h3>Aggiungi Attuatore</h3>\n            </div>\n            </Container>\n\n            <Container style={{ paddingTop: \"20px\", marginBottom:'100px' }} >\n                <Card  style={{ width: '100%', border: \"2px solid blue\" }}>\n                    <Card.Header className=\"bg-secondary \">\n                        <Row>\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} placeholder=\"Inserisci il nome dell'Attuatore\" onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} />\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row >\n\n                                {Address_Select()}\n\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\n                                    <Row >\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\n                                        <Col lg={8}>\n                                            <select name=\"tipiattuatori\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}> \n                                                <option value=\"on_off\">ON/OFF</option>\n                                                <option value=\"dimmer\">Dimmer</option>\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\n                                                <option value=\"gruppi\">Gruppi</option>\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\n                                                <option value=\"termostati\">Termostati</option>\n                                                <option value=\"serrature\">Serrature</option>\n                                                <option value=\"campanello_porta\">Campanello porta</option>\n                                            </select>\n                                        </Col>\n                                    </Row>\n                                </Col>\n\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\n\n\n                                <Col style={{ alignSelf: \"center\" }}>\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" className=\"btn-primary\" onClick={handlClickAGGIUNGI} >AGGIUNGI</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n\n\n        </>\n    );\n\n}\n\n\n\nexport default AggiungiAttuatore;\n\n\n","import { useState, useEffect } from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col, Modal } from 'react-bootstrap';\nimport ConfigurazioneDispositivi from \"./ConfigurazioneDispositivi\"\nimport AggiungiAttuatore from \"./AggiungiAttuatore\"\n\nimport \"./../App.css\";\n\n\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\nconst ADDRESS_SERVER = \"/\";\n\n\nfunction Configurazioni() {\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\n\n    //pop up error\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [messaggio_da_visualizzare, setmessaggio_da_visualizzare] = useState('');\n\n\n    useEffect(() => {\n        setListaDispositivi([]);\n        const fetchData = async () => {\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\n                .then(res => res.json())\n                .then((data) => {\n                    setListaDispositivi(data);\n                });\n        };\n        fetchData();\n    }, []);\n\n    //POST ---->OK<----\n    const post_request_update_database = (address, datas) => {\n        var data = JSON.stringify(datas);\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: data\n        };\n        fetch(ADDRESS_SERVER + address, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\n                console.log(data);\n            }\n            );\n    }\n\n    //AGGIORNA NEL DATABASE IL NOME ATTUATORE e nel HOOK ---->OK<----\n    const handle_CHANHE_NOME = (value) => {\n        //value.nome_attuatore\n        //value.nuovonome\n\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'nuovo_nome': value.nuovonome };\n        post_request_update_database('AGGIORNA_NOME_ATTUATORE.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.nome_attuatore = value.nuovonome;\n    }\n\n    //AGGIORNA NEL DATABASE L'INDIRIZZO AMBIENTE e nel HOOK\n    const handle_CHANHE_A = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_Ambiente': value.indirizzo_Ambiente };\n        post_request_update_database('AGGIORNA_INDIRIZZO_A.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.indirizzo_Ambiente = value.indirizzo_Ambiente;\n    }\n    //AGGIORNA NEL DATABASE L'INDIRIZZO PL e nel HOOK\n    const handle_CHANHE_PL = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_PL': value.indirizzo_PL };\n        post_request_update_database('AGGIORNA_INDIRIZZO_PL.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.indirizzo_PL = value.indirizzo_PL;\n    }\n    //AGGIORNA NEL DATABASE IL TIPO ATTUATORE e nel HOOK\n    const handle_TIPO = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'tipo_attuatore': value.tipo_attuatore };\n        post_request_update_database('AGGIORNA_TIPO_ATTUATORE.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.tipo_attuatore = value.tipo_attuatore;\n    }\n    //AGGIORNA NEL DATABASE TIMER SALITA e nel HOOK\n    const handle_TIMER_UP = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_salita': value.timer_salita };\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.timer_salita = value.timer_salita;\n    }\n    //AGGIORNA NEL DATABASE TIMER DISCESA e nel HOOK\n    const handle_TIMER_DOWN = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_discesa': value.timer_discesa };\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n        attuatore.timer_discesa = value.timer_discesa;\n    }\n    //AGGIORNA NEL DATABASE ***ELIMINA*** e nel HOOK\n    const handle_ELIMINA = (value) => {\n        var datas = { 'nome_attuatore': value.nome_attuatore };\n        post_request_update_database('RIMUOVI_ATTUATORE.json', datas);\n\n        //Aggiorna Lista nel Array HOOK\n        var myArray = lista_dispositivi.filter(function (device) {\n            return device.nome_attuatore !== value.nome_attuatore;\n        });\n        setListaDispositivi(myArray);\n    }\n\n    //-----------------------------------------------\n    //AGGIUNGI NUOVO ATTUATORE  \n    const handel_AGIUNGInew = (value) => {\n        if (value.nome_attuatore === '') {\n            setmessaggio_da_visualizzare(\"Il nome del nuovo Attuatore non può essere vuoto\");\n            handleShow();\n            //Pop up\n        } else {\n            //Controlla se esiste in \"lista_dispositivi\"\n            var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\n            if (typeof attuatore === \"undefined\") {\n                //Ok inserisci nel database!!!\n\n                post_request_update_database('AGGIUNGI_ATTUATORE.json', value);\n\n                //Aggiungi in lista_dispositivi\n                setListaDispositivi(lista_dispositivi => [...lista_dispositivi, value]);\n            } else {\n                //ERROE c'è già --> \"POPUP\"\n                setmessaggio_da_visualizzare(\"Esiste già il nome dell'attuatore nel database\");\n                handleShow();\n            }\n        }\n    }\n\n\n\n\n\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                {lista_dispositivi.map((device, i) => (\n                    <div key={device.nome_attuatore} >\n                        <ConfigurazioneDispositivi device={device} handle_CHANHE_NOME={handle_CHANHE_NOME}\n                            handle_CHANHE_A={handle_CHANHE_A} handle_CHANHE_PL={handle_CHANHE_PL}\n                            handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\n                            handle_ELIMINA={handle_ELIMINA} />\n                    </div>\n                ))}\n\n                <AggiungiAttuatore handel_AGIUNGInew={handel_AGIUNGInew} />\n\n                <Modal\n                    show={show}\n                    onHide={handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Errore</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {messaggio_da_visualizzare}\n                  </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Ok\n                     </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n        </>\n    );\n}\n\n\n\nexport default Configurazioni;","import react from 'react';\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\nimport Test from '../Test/Test';\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./../App.css\";\n\n\n\n\nfunction Homepage() {\n    let history = useHistory();\n\n    const handleClickConfigurazioni = () => {\n\n        history.push(\"configurazione.html\");\n\n    };\n    const handleClickTest = () => {\n        history.push(\"test.html\");\n    };\n    const handleClickNodeRed = () => {\n        history.push(\"noderedHome.html\");\n    };\n\n    \n\n    return (\n        <>\n            <Container className=\"justify-content-md-center\" style={{}}>\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                    <h1 className=\"display-4\">SCS-bus Raspberry shield</h1>\n                    <p className=\"lead\">Benvenuti nella pagina di configurazione dei dispositivi del Bus SCS e Test</p>\n                </div>\n\n\n                <div className=\"card-deck text-center\" >\n                    <div className=\"card mb-4 shadow-sm\">\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>Attuatori on/off</li>\n                                <li>Dimmer</li>\n                                <li>Serrande/Tapparelle</li>\n                                <li>Gruppi</li>\n                                <li>Sensori Temperatura</li>\n                                <li>Termostati</li>\n                                <li>Serrature</li>\n                                <li>Campanello porta</li>\n                            </ul>\n                            <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\" onClick={handleClickConfigurazioni} >Entra</button>\n                        </div>\n                    </div>\n\n                    <div className=\"card mb-4 shadow-sm\">\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Test</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <h1 className=\"card-title pricing-card-title\"> <small className=\"text-muted\"> </small></h1>\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>Attuatori on/off</li>\n                                <li>Dimmer</li>\n                                <li>Serrande/Tapparelle</li>\n                                <li>Gruppi</li>\n                                <li>Sensori Temperatura</li>\n                                <li>Termostati</li>\n                                <li>Serrature</li>\n                                <li>Campanello porta</li>\n                            </ul>\n                            <button type=\"button\" className=\"btn btn-lg btn-block btn-primary idTest\" onClick={handleClickTest} >Entra</button>\n                        </div>\n                    </div>\n\n                    <div class=\"card mb-4 box-shadow\">\n                        <div class=\"card-header\">\n                        <h4 className=\"my-0 font-weight-normal\">Node-RED</h4>\n                        </div>\n                        <div class=\"card-body d-flex flex-column\">\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>AWS IoTs</li>\n                                <li>Alexa virtual-smart-home</li>\n                            </ul>\n                            <button type=\"button\" class=\"btn btn-lg btn-block btn-primary mt-auto\" style={{marginBottom:'1em'}} onClick={handleClickNodeRed}>Entra</button>\n                        </div>\n                    </div>\n\n\n                </div>\n\n\n\n            </Container>\n        </>\n    );\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\nexport default Homepage;","import { useState, useEffect, useRef } from 'react';\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\nconst ADDRESS_SERVER = \"/\";\n\n\nfunction NoderedAlexa() {\n    //const [startNodered_enable, setstartNodered_enable] = useState(true);\n    const [stato_esporta, setstato_esporta] = useState(true);\n    const [stato_startNode, setstato_startNode] = useState(false);\n    const [link_nodered, setlink_nodered] = useState(\"\");\n\n    const [flow_anuale, setflow_anuale] = useState(\"\");\n    const textAreaRef = useRef(null);\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\n\n\n    const [secondu, setsecondu] = useState(30);\n    const [over, setover] = useState(false);\n    const [timerID, settimerID] = useState(null);\n\n    var second = 30;\n\n    useEffect(() => {\n        if (secondu === 0) {\n            clearTimeout(timerID);\n        }\n\n        return () => {\n            //console.log(\"returnnnnnn\");\n            // clearTimeout(timerID);\n        };\n    }, [secondu]);\n\n\n    const tick = () => {\n        console.log('tick ' + second);\n        if (second === 0) setover(true);\n        else {\n            console.log(second);\n            second = (second - 1);\n            setsecondu(second);\n\n\n        }\n    };\n\n    const handle_count = () => {\n        if (stato_startNode === false) {\n            return (\n                <>\n                    <p></p>\n                </>\n            );\n        }\n        if (secondu === 0) {\n            return (\n                <>\n                    <a href={link_nodered} target=\"_blank\">{link_nodered} </a>\n                </>\n            );\n        } else {\n            console.log(\"countdown \" + secondu);\n\n            return (\n                <>\n                    <p> Wait NodeRed start: {secondu} sec</p>\n                </>\n            );\n\n        }\n\n\n\n\n\n    };\n\n    const handle_Esporta = () => {\n        setstato_esporta(false);\n        var add = window.location.host.split(\":\");\n        setlink_nodered('http://' + add[0] + ':1880');\n        const fetchData = async () => {\n            await fetch(ADDRESS_SERVER + 'Send_to_NodeRed.json')\n                .then(res => res.json())\n                .then((data) => {\n                    console.log(data);\n                });\n        };\n        fetchData();\n        handle_startNodered();\n    };\n\n\n    const handle_startNodered = () => {\n\n        const t = setInterval(() => tick(), 1000);\n        settimerID(t);\n        //        clearTimeout(timerID);\n\n        setstato_startNode(true);\n\n    };\n\n\n    const handle_GeneraManuale = () => {\n\n        const fetchData = async () => {\n            await fetch(ADDRESS_SERVER + 'Get_NodeRed_manual_flow.json')\n                .then(res => res.text())\n                .then((data) => {\n                    console.log(data);\n                    setflow_anuale(data);\n                });\n        };\n        fetchData();\n\n    };\n\n    const handle_codeflow_manuale = () => {\n        if (flow_anuale === '') {\n            return (\n                <>\n\n\n                </>\n            );\n        }\n\n        return (\n            <>\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\n            </>\n        );\n    };\n\n    const handle_CopyClipboard = (e) => {\n        textAreaRef.current.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the whole text area selected.\n        e.target.focus();\n        setstato_startmanuale(true);\n    }\n\n\n\n\n    const handle_codeflow_manuale_incolla = () => {\n        var add = window.location.host.split(\":\");\n        var add2 = ('http://' + add[0] + ':1880');\n        if (stato_startmanuale === false) {\n            return (\n                <>\n                    <p></p>\n                </>\n            );\n        }\n        return (\n            <>\n                <ul style={{ listStyleType: 'none' }} >\n                    <li>Apri node-red</li>\n                    <li>Importa Flow</li>\n                    <li>Incolla il contenuto generato</li>\n                </ul>\n\n\n                <a href={add2} target=\"_blank\">{add2} </a>\n\n            </>\n        );\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return (\n        <>\n\n\n\n            <Container className=\"justify-content-md-center\" style={{}}>\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\n                </div>\n\n\n                <div className=\"card-deck text-center\" >\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Automatica</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>\n                                    <p>Esporta auto-configurazione</p>\n                                    <Button variant=\"outline-primary\" onClick={handle_Esporta} >1 - Esporta su Node-Red</Button>\n                                </li>\n                                <li style={{ marginTop: \"20px\" }}>\n                                    {handle_count()}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n                <div className=\"card-deck text-center\"  >\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Manuale</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>\n                                    <p>Genera NodeRed Flow</p>\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\n                                </li>\n                                <li style={{ marginTop: \"20px\" }}>\n                                    {handle_codeflow_manuale()}\n                                </li>\n                                <li style={{ marginTop: \"20px\" }}>\n                                    {handle_codeflow_manuale_incolla()}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n\n\n\n            </Container>\n\n        </>\n    );\n}\n\n\n\nexport default NoderedAlexa;","import { useState, useEffect, useRef } from 'react';\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\nconst ADDRESS_SERVER = \"/\";\n\n\nfunction NoderedHome() {\n\n    return (\n        <>\n            <Container className=\"justify-content-md-center\" style={{}}>\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\n                </div>\n\n\n                <div className=\"card-deck text-center\" >\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed AWS</h4>\n                        </div>\n                        <div>\n                            <p><i><small>Configurare prima AWS Server: <a href=\"http://scsshields.altervista.org/AWS_Skill_Bticino.html\" target=\"_blank\">Guida</a></small></i></p>\n                        </div>\n                        <div className=\"card-body\">\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>                                    \n                                    <a href=\"/NoderedAlexaAWS.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n                <div className=\"card-deck text-center\"  >\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed \"virtual-smart-home\" library</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>\n                                    <a href=\"/noderedAlexa.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n\n\n\n            </Container>\n\n        </>\n    );\n}\n\n\n\nexport default NoderedHome;","import { useState, useEffect, useRef } from 'react';\nimport { Container, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\n\nimport \"./../App.css\";\n\n\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\nconst ADDRESS_SERVER = \"/\";\n\n\nfunction NodeRedAWSDispositivi({ device }) {\n    // EndPoint\n    const [name_EndPoint, setname_EndPoint] = useState(\"\");\n\n    useEffect(() => {\n        setname_EndPoint(device.nome_endpoint);\n    }, [device]);\n\n\n    //POST ---->OK<----\n    const post_request_update_database = (datas) => {\n        var data = JSON.stringify(datas);\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: data\n        };\n        fetch(ADDRESS_SERVER + 'SetDeviceEndPointAWS.json', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\n                console.log(data);\n            }\n            );\n    }\n\n        \n\n    //******************Device ENDPOINT******************\n    //change\n    const handleChangeAWSDeviceENDPOINT = (event) => {\n        setname_EndPoint(event.target.value);\n    }\n    const handleBlurAWSDeviceENDPOINT = (event) => {\n        //Qui ho il nome Attuatore Completo\n        //Update SERVER!\n        var datas = { 'nome_attuatore': device.nome_attuatore , 'nome_endpoint': event.target.value };\n        post_request_update_database(datas);\n    }\n\n\n\n\n\n\n    return (\n        <>\n            <Row>\n                <Col className=\"text-primary text-center\">\n                    {device.nome_attuatore}\n                </Col>\n                <Col lg={6} className=\"text-center\">\n                </Col>\n                <Col>\n                    <input type=\"text\" className=\"form-control\" value={name_EndPoint} placeholder=\"Inserisci endpoint\" onChange={handleChangeAWSDeviceENDPOINT} onBlur={handleBlurAWSDeviceENDPOINT} />\n                </Col>\n            </Row>\n            <hr></hr>\n        </>\n    );\n}\n\n\n\nexport default NodeRedAWSDispositivi;","import { useState, useEffect, useRef } from 'react';\nimport { Container, Form, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\nimport NodeRedAWSDispositivi from \"./NodeRedAWSDispositivi\"\n\n\n\nimport \"./../App.css\";\n//https://www.pluralsight.com/guides/uploading-files-with-reactjs\n\n\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\nconst ADDRESS_SERVER = \"/\";\n\n\nfunction NoderedAlexaAWS() {\n    //Indirizzo EndPoint\n    const [add_EndPoint, setadd_EndPoint] = useState(\"\");\n    //File name Certificati\n    const [FILE_private_key, setFILE_private_key] = useState(\"\");\n    const [FILE_cert_pem, setFILE_cert_pem] = useState(\"\");\n    const [FILE_root_CA, setFILE_root_CA] = useState(\"\");\n    //Dispositivi e ENDPOINT\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\n\n    const [flow_anuale, setflow_anuale] = useState(\"\");\n    const textAreaRef = useRef(null);\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\n\n\n    useEffect(() => {\n        setListaDispositivi([]);\n\n        const fetchDataDispositivi = async () => {\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\n                .then(res => res.json())\n                .then((data) => {\n                    setListaDispositivi(data);\n                });\n        };\n\n\n        fetchData();\n        fetchDataDispositivi();\n\n    }, []);\n\n    const fetchData = async () => {\n        await fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json')\n            .then(res => res.json())\n            .then((data) => {\n                setadd_EndPoint(data.EndPoint);\n                setFILE_private_key(data.PRIVATE_KEY);\n                setFILE_cert_pem(data.CERT_PEM);\n                setFILE_root_CA(data.CRT);\n            });\n    };\n\n\n    //POST ---->OK<----\n    const post_request_update_database = (datas) => {\n        var data = JSON.stringify(datas);\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: data\n        };\n        fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\n                console.log(data);\n            }\n            );\n    }\n\n\n    const [selectedFile, setSelectedFile] = useState();\n\n    const changeHandler = (event) => {\n        setSelectedFile(event.target.files[0]);\n        //setIsSelected(true);\n    };\n\n    const handleSubmission = (tipo) => {\n        const formData = new FormData();\n        formData.append('File', selectedFile);\n        fetch(\n            ADDRESS_SERVER + 'AWSCertificatiploadHandler.html?tipo=' + tipo,\n            {\n                method: 'POST',\n                body: formData,\n            }\n        )\n            .then((response) => response.json())\n            .then((result) => {\n                console.log('Success:', result);\n                fetchData();\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    };\n\n\n\n\n\n\n\n    //******************Indirizzo ENDPOINT******************\n    //change\n    const handleChangeEndPoint = (event) => {\n        setadd_EndPoint(event.target.value);\n    }\n    const handleBlurEndPoint = (event) => {\n        //Qui ho il nome Attuatore Completo\n        //Update SERVER!\n        var datas = { 'EndPoint': event.target.value };\n        post_request_update_database(datas);\n    }\n\n\n\n    const handle_GeneraManuale = () => {\n\n        const fetchData = async () => {\n            await fetch(ADDRESS_SERVER + 'Get_NodeRedAWS_manual_flow.json')\n                .then(res => res.text())\n                .then((data) => {\n                    setflow_anuale(data);\n                });\n        };\n        fetchData();\n\n    };\n    const handle_codeflow_manuale = () => {\n        if (flow_anuale === '') {\n            return (\n                <>\n\n\n                </>\n            );\n        }\n\n        return (\n            <>\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\n            </>\n        );\n    };\n\n    const handle_codeflow_manuale_incolla = () => {\n        var add = window.location.host.split(\":\");\n        var add2 = ('http://' + add[0] + ':1880');\n        if (stato_startmanuale === false) {\n            return (\n                <>\n                    <p></p>\n                </>\n            );\n        }\n        return (\n            <>\n                <ul style={{ listStyleType: 'none' }} >\n                    <li>Apri node-red</li>\n                    <li>Importa Flow</li>\n                    <li>Incolla il contenuto generato</li>\n                </ul>\n\n\n                <a href={add2} target=\"_blank\">{add2} </a>\n\n            </>\n        );\n    };\n\n    const handle_CopyClipboard = (e) => {\n        textAreaRef.current.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the whole text area selected.\n        e.target.focus();\n        setstato_startmanuale(true);\n    }\n\n\n    return (\n        <>\n\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                <h1 className=\"display-5\">Configurazione AWS-IoT</h1>\n            </div>\n\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        EndPoint\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n                            <Row>\n                                <Col lg={3} className=\"text-primary text-center\">\n                                </Col>\n                                <Col lg={6} className=\"text-primary text-center\">\n                                    <input type=\"text\" className=\"form-control\" value={add_EndPoint} placeholder=\"Inserire indirizzo EndPoint AWS IoT\" onChange={handleChangeEndPoint} onBlur={handleBlurEndPoint} />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        Certificati AWS-IoT\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n\n                            <Row>\n                                <Col lg={3} className=\"text-primary text-center\">\n                                    PRIVATE_KEY\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    \"{FILE_private_key}\"\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    <input type=\"file\" name=\"file\" accept=\".pem.key\" onChange={changeHandler} />\n                                </Col>\n                                <Col className=\"text-center\">\n                                    <button onClick={() => handleSubmission('PRIVATE_KEY')}>Submit</button>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <Row>\n                                <Col lg={3} className=\"text-primary text-center\">\n                                    CERT_PEM\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    \"{FILE_cert_pem}\"\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    <input type=\"file\" name=\"file\" accept=\".pem.crt\" onChange={changeHandler} />\n                                </Col>\n                                <Col className=\"text-center\">\n                                    <button onClick={() => handleSubmission('CERT_PEM')}>Submit</button>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <Row>\n                                <Col lg={3} className=\"text-primary text-center\">\n                                    root-CA\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    \"{FILE_root_CA}\"\n                                </Col>\n                                <Col lg={3} className=\"text-center\">\n                                    <input type=\"file\" name=\"file\" accept=\".pem,.txt\" onChange={changeHandler} />\n                                </Col>\n                                <Col className=\"text-center\">\n                                    <button onClick={() => handleSubmission('root-CA')}>Submit</button>\n                                </Col>\n                            </Row>\n\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n\n\n            <Container style={{ paddingTop: \"20px\" }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        Assegnazione endpoint AWS lambda ai Dispositivi\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid>\n\n                                {lista_dispositivi.map((device, i) => (\n                                    <div key={i} className=\"container-fluid\">\n                                        <NodeRedAWSDispositivi device={device}  />\n                                    </div>\n                                ))}\n\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n\n\n\n\n\n            <Container style={{ paddingTop: \"20px\", paddingBottom: '40px' }} >\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\n                    <Card.Header>\n                        Genera Flow NodeRed\n                    </Card.Header>\n                    <Card.Body>\n                        <Container fluid className='text-center'>\n\n                            <ul className=\"list-unstyled mt-3 mb-4\">\n                                <li>\n                                    <p>Genera NodeRed Flow</p>\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\n                                </li>\n                                <li style={{ marginTop: \"20px\" }}>\n                                    {handle_codeflow_manuale()}\n                                </li>\n                                <li style={{ marginTop: \"20px\" }}>\n                                    {handle_codeflow_manuale_incolla()}\n                                </li>\n                            </ul>\n\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Container>\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    );\n}\n\n\n\nexport default NoderedAlexaAWS;","import { useState, useEffect } from 'react';\nimport MYnavBar from './MYnavBar'\nimport Test from './Test/Test'\nimport Configurazione from './Configurazione/Configurazione'\nimport Homepage from './HomePage/Homepage'\n\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport noderedAlexa from './NodeRedAlexa/NodeRedAlexa';\nimport noderedHome from './NodeRedAlexa/noderedHome';\nimport NoderedAlexaAWS from './NodeRedAlexa/noderedAlexaAWS';\n\n\n\nfunction App() {\n\n\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <MYnavBar />\n\n        <Route exact path=\"/\" component={Homepage}/>\n        <Route exact path=\"/configurazione.html\" component={Configurazione}/>\n        <Route exact path=\"/test.html\" component={Test}/>\n        <Route exact path=\"/noderedHome.html\" component={noderedHome}/>\n        <Route exact path=\"/noderedAlexa.html\" component={noderedAlexa}/>\n        <Route exact path=\"/NoderedAlexaAWS.html\" component={NoderedAlexaAWS}/>\n\n\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}